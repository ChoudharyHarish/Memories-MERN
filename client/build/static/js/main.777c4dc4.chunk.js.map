{"version":3,"sources":["images/memories-Logo.png","images/memoriesText.png","components/Posts/post/styles.js","api/api.js","redux/postSlice.js","components/Posts/post/post.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","components/style.js","components/pagination.js","components/Home/styles.js","components/Home/Home.js","components/Auth/Icon.js","components/Auth/styles.js","components/Auth/Input.js","redux/authSlice.js","components/Auth/Auth.js","components/Navbar/styles.js","components/Navbar/Navbar.js","components/PostDetails/styles.js","components/PostDetails/CommentSection.js","components/PostDetails/PostDetails.js","app.js","redux/store.js","index.js"],"names":["module","exports","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","cardAction","textAlign","Api","axios","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","authorization","fetchAllPosts","pageNumber","get","GetPost","id","fetchPostsByFilter","search","tags","PostComment","message","post","createNewPost","postData","UpdatePost","patch","DeletePost","delete","LikePost","i","fetchPosts","createAsyncThunk","getState","data","currPage","posts","numberOfPages","postComment","console","log","fetchPost","getPostBySearch","createPost","updatePost","currentId","deletePost","likePost","postSlice","createSlice","name","initialState","currPost","isLoading","reducers","getPost","state","action","find","_id","payload","setIsLoading","extraReducers","builder","addCase","fulfilled","push","map","filter","actions","Post","setCurrentId","classes","useStyles","dispatch","useDispatch","navigate","useNavigate","user","JSON","parse","useState","likes","setLikes","hasLikedPost","userId","Likes","length","like","fontSize","Card","className","raised","elevation","ButtonBase","component","onClick","e","CardMedia","image","selectedFile","Typography","variant","createdBy","moment","createdAt","fromNow","tag","gutterBottom","CardContent","CardActions","Button","size","disabled","style","preventDefault","handleSubmit","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","Posts","useSelector","CircularProgress","Grid","container","key","item","xs","sm","md","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","setPostData","disptach","currentPost","auth","useEffect","handleClear","Paper","to","textDecoration","autoComplete","noValidate","onSubmit","TextField","label","fullWidth","value","onChange","target","multiline","rows","split","type","multiple","onDone","base64","ul","Paginate","page","Pagination","count","renderItem","PaginationItem","Link","appBarSearch","pagination","marginTop","gridContainer","breakpoints","down","Home","query","URLSearchParams","useLocation","searchQuery","setSearch","setTags","searchPost","join","Grow","in","Container","maxWidth","AppBar","onKeyPress","keyCode","handleKeyPress","onAdd","chip","onDelete","tagToDelete","searchButton","icon","viewBox","fill","d","avatar","palette","secondary","main","submit","googleButton","Input","handleChange","half","autoFocus","handleShowPassword","required","InputProps","endAdornment","InputAdornment","IconButton","signUp","formData","logIn","authSlice","googleLogin","result","token","imageUrl","givenName","googleId","setItem","stringify","googleLogOut","removeItem","firstName","lastName","email","password","confirmPassword","Auth","setForm","isSignup","setIsSignup","showPassword","setShowPassword","googleSuccess","res","profileObj","tokenId","error","Avatar","clientId","render","renderProps","startIcon","Icon","onSuccess","onFailure","cookiePolicy","prevIsSignup","appBar","heading","primary","fontWeight","marginLeft","marginRight","toolbar","profile","logout","userName","brandContainer","purple","getContrastText","deepPurple","Navbar","decode","exp","Date","now","src","logo","alt","text","Toolbar","charAt","objectFit","maxHeight","section","flex","imageSection","recommendedPosts","loadingPaper","commentsOuterContainer","commentsInnerContainer","overflowY","CommentSection","comment","setComment","comments","setComments","commentsRef","useRef","handleComment","current","scrollIntoView","behavior","c","ref","useParams","Divider","cursor","openPost","App","path","exact","element","PostDetails","store","configureStore","reducer","postReducer","authReducer","ReactDOM","document","getElementById"],"mappings":";iHAAAA,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,2YCE5BC,cAAW,CACtBC,MAAO,CACHC,OAAQ,EACRC,WAAY,SACZC,gBAAiB,qBACjBC,oBAAqB,UAEzBC,OAAQ,CACJA,OAAQ,SAEZC,eAAgB,CACZL,OAAQ,QAEZM,KAAM,CACFC,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAChBC,aAAc,OACdV,OAAQ,OACRW,SAAU,YAEdC,QAAS,CACLD,SAAU,WACVE,IAAK,OACLC,KAAM,OACNC,MAAO,SAEXC,SAAU,CACNL,SAAU,WACVE,IAAK,OACLI,MAAO,OACPF,MAAO,SAGXG,KAAM,CACFX,QAAS,QAEbY,QAAS,CACLZ,QAAS,OACTE,eAAgB,gBAChBW,OAAQ,QAEZC,MAAO,CACHC,QAAS,UAEbC,YAAa,CACTD,QAAS,kBACTf,QAAS,OACTE,eAAgB,iBAEpBe,WAAY,CACRjB,QAAS,QACTkB,UAAW,a,gCCnDbC,E,OAAMC,EAAMC,OAAO,CAAEC,QADf,6CAIZH,EAAII,aAAaC,QAAQC,KAAI,SAACC,GAI1B,OAHIC,aAAaC,QAAQ,aACrBF,EAAIG,QAAQC,cAAa,iBAAaH,aAAaC,QAAQ,aAExDF,KAWX,IAAMK,EAAgB,SAACC,GAAU,OAAKb,EAAIc,IAAI,eAAD,OAAgBD,KACvDE,EAAU,SAACC,GAAE,OAAKhB,EAAIc,IAAI,UAAD,OAAWE,KAEpCC,EAAqB,SAAH,OAAMC,EAAM,EAANA,OAAQC,EAAI,EAAJA,KAAI,OAAOnB,EAAIc,IAAI,uBAAD,OAAwBI,GAAU,OAAM,iBAASC,KACnGC,EAAc,SAAH,OAAMC,EAAO,EAAPA,QAASL,EAAE,EAAFA,GAAE,OAAOhB,EAAIsB,KAAK,mBAAD,OAAoBN,GAAM,CAAEK,aACvEE,EAAgB,SAACC,GAAQ,OAAKxB,EAAIsB,KAAK,SAAUE,IACjDC,EAAa,SAACD,EAAUR,GAAE,OAAKhB,EAAI0B,MAAM,SAAD,OAAUV,GAAMQ,IACxDG,EAAa,SAACX,GAAE,OAAKhB,EAAI4B,OAAO,UAAD,OAAWZ,KAC1Ca,EAAW,SAACb,GAAE,OAAKhB,EAAI0B,MAAM,eAAD,OAAgBV,GAAMA,I,aC5BxD,kmGAAAc,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAIO,IAAMC,EAAaC,YAAiB,aAAY,uCAAE,WAAOnB,EAAW,GAAD,+EAAY,SAARoB,SAAQ,SAIvBrB,EAAcC,GAAY,KAAD,EAAtC,OAAsC,aAA5EqB,KAAQC,EAAQ,EAARA,SAAUC,EAAK,EAALA,MAAOC,EAAa,EAAbA,cAAa,kBACvC,CAAED,QAAOD,WAAUE,kBAAe,2CAC5C,qDANsD,IAQ1CC,EAAcN,YAAiB,cAAa,uCAAE,2FAAoB,OAAXX,EAAO,EAAPA,QAASL,EAAE,EAAFA,GAAE,kBAEhDI,EAAY,CAAEC,UAASL,OAAM,KAAD,EAAvC,OAAuC,SAA3CkB,EAAI,EAAJA,KAAI,kBACLA,GAAI,gCAGXK,QAAQC,IAAI,EAAD,IAAQ,yDAG1B,mDATwD,IAW5CC,EAAYT,YAAiB,YAAW,uCAAE,WAAOhB,GAAE,yFACrCD,EAAQC,GAAI,KAAD,EAAtB,OAAsB,SAA1BkB,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,mDAHoD,IAKxCQ,GAAkBV,YAAiB,kBAAiB,uCAAE,2FAAqB,OAAZd,EAAM,EAANA,OAAQC,EAAI,EAAJA,KAAI,SAC7DF,EAAmB,CAAEC,SAAQC,SAAQ,KAAD,EAA/C,OAA+C,SAAnDe,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,mDAHgE,IAKpDS,GAAaX,YAAiB,aAAY,uCAAE,WAAOR,GAAQ,yFAC7CD,EAAcC,GAAU,KAAD,EAAlC,OAAkC,SAAtCU,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,mDAHsD,IAI1CU,GAAaZ,YAAiB,aAAY,uCAAE,2FAA4B,OAAnBa,EAAS,EAATA,UAAWrB,EAAQ,EAARA,SAAQ,SAC1DC,EAAWD,EAAUqB,GAAW,KAAD,EAA1C,OAA0C,SAA9CX,EAAI,EAAJA,KAAI,kBACL,CAAEA,OAAMW,cAAW,2CAC7B,mDAHsD,IAI1CC,GAAad,YAAiB,aAAY,uCAAE,WAAOhB,GAAE,iFACxDW,EAAWX,GAAI,KAAD,2BACbA,GAAE,2CACZ,mDAHsD,IAI1C+B,GAAWf,YAAiB,WAAU,uCAAE,WAAOhB,GAAE,yFACnCa,EAASb,GAAI,KAAD,EAAvB,OAAuB,SAA3BkB,EAAI,EAAJA,KAAI,kBACL,CAAEA,OAAMlB,OAAI,2CACtB,mDAHkD,IAgB7CgC,GAAYC,YAAY,CAC1BC,KAAM,YACNC,aAbiB,CACjBf,MAAO,GACPd,KAAM,KACN8B,SAAU,KACVP,UAAW,KACXR,cAAe,EACfF,SAAU,EACVkB,WAAW,GAOXC,SAAU,CACNC,QAAS,SAACC,EAAOC,GAEb,IAAMnC,EAAOkC,EAAMpB,MAAMsB,MAAK,SAACpC,GAAI,OAAKA,EAAKqC,MAAQF,EAAOG,WAC5DJ,EAAMJ,SAAW9B,GAErBuC,aAAc,SAACL,EAAOC,GAClBD,EAAMH,UAAYI,EAAOG,UAGjCE,cAAe,SAACC,GACZA,EAAQC,QAAQjC,EAAWkC,WAAW,SAACT,EAAOC,GAC1CD,EAAMH,WAAY,EAClB,MAA2CI,EAAOG,QAA1CxB,EAAK,EAALA,MAAOD,EAAQ,EAARA,SAAUE,EAAa,EAAbA,cACzBmB,EAAMpB,MAAQA,EACdoB,EAAMrB,SAAWA,EACjBqB,EAAMnB,cAAgBA,KAE1B0B,EAAQC,QAAQrB,GAAWsB,WAAW,SAACT,EAAOC,GAC1CD,EAAMpB,MAAM8B,KAAKT,EAAOG,YAE5BG,EAAQC,QAAQpB,GAAWqB,WAAW,SAACT,EAAOC,GAC1C,MAA4BA,EAAOG,QAA3B1B,EAAI,EAAJA,KAAMW,EAAS,EAATA,UACdW,EAAMpB,MAAQoB,EAAMpB,MAAM+B,KAAI,SAAC7C,GAAI,OAAKA,EAAKqC,MAAQd,EAAYX,EAAOZ,QAG5EyC,EAAQC,QAAQlB,GAAWmB,WAAW,SAACT,EAAOC,GAC1CD,EAAMpB,MAAQoB,EAAMpB,MAAMgC,QAAO,SAAC9C,GAAI,OAAKA,EAAKqC,MAAQF,EAAOG,cAEnEG,EAAQC,QAAQjB,GAASkB,WAAW,SAACT,EAAOC,GACxC,MAAqBA,EAAOG,QAApB1B,EAAI,EAAJA,KAAMlB,EAAE,EAAFA,GACdwC,EAAMpB,MAAQoB,EAAMpB,MAAM+B,KAAI,SAAC7C,GAAI,OAAKA,EAAKqC,MAAQ3C,EAAKkB,EAAOZ,QAErEyC,EAAQC,QAAQtB,GAAgBuB,WAAW,SAACT,EAAOC,GAC/CD,EAAMpB,MAAQqB,EAAOG,QACrBJ,EAAMH,WAAY,KAEtBU,EAAQC,QAAQvB,EAAUwB,WAAW,SAACT,EAAOC,GACzCD,EAAMlC,KAAOmC,EAAOG,cAMzB,GAAkCZ,GAAUqB,QAA3BR,IAAF,GAAPN,QAAqB,GAAZM,cACTb,MAAiB,Q,SCxBjBsB,GAxEF,SAAH,GAA2C,IAArChD,EAAI,EAAJA,KAAiBiD,GAAF,EAAT1B,UAAuB,EAAZ0B,cACvBC,EAAUC,IACVC,EAAWC,eACXC,EAAWC,cACXC,EAAOC,KAAKC,MAAMxE,aAAaC,QAAQ,SAC7C,EAA0BwE,mBAAa,OAAJ3D,QAAI,IAAJA,OAAI,EAAJA,EAAM4D,OAAM,mBAAxCA,EAAK,KAAEC,EAAQ,KAWhBC,EAAeF,EAAMxB,MAAK,SAAC1C,GAAE,OAAKA,KAAW,OAAJ8D,QAAI,IAAJA,OAAI,EAAJA,EAAMO,WAU/CC,EAAQ,WACV,OAAIJ,EAAMK,OAAS,EACRL,EAAMxB,MAAK,SAAC8B,GAAI,OAAKA,KAAc,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMO,WAEpC,oCAAE,kBAAC,IAAc,CAACI,SAAS,UAAU,OAAOP,EAAMK,OAAS,EAAC,kBAAcL,EAAMK,OAAS,EAAC,qBAAeL,EAAMK,OAAM,gBAAQL,EAAMK,OAAS,EAAI,IAAM,KAEtJ,oCAAE,kBAAC,IAAkB,CAACE,SAAS,UAAU,OAAOP,EAAMK,OAAO,IAAmB,IAAjBL,EAAMK,OAAe,OAAS,SAIlG,oCAAE,kBAAC,IAAkB,CAACE,SAAS,UAAU,aAIpD,OACI,kBAACC,EAAA,EAAI,CAACC,UAAWnB,EAAQ5F,KAAMgH,QAAM,EAACC,UAAW,GAC7C,kBAACC,EAAA,EAAU,CAACC,UAAU,OAAOJ,UAAWnB,EAAQ1E,WAAYkG,QAAS,SAACC,GAAC,OA7BvDrB,EAAS,UAAD,OAAWtD,EAAKqC,QA8BpC,kBAACuC,EAAA,EAAS,CAACP,UAAWnB,EAAQnG,MAAO8H,MAAO7E,EAAK8E,cAAgB,uGACjE,yBAAKT,UAAWnB,EAAQtF,SACpB,kBAACmH,EAAA,EAAU,CAACC,QAAQ,MAAMhF,EAAKiF,WAC/B,kBAACF,EAAA,EAAU,CAACC,QAAQ,SAASE,IAAOlF,EAAKmF,WAAWC,YAExD,yBAAKf,UAAWnB,EAAQ/E,SACpB,kBAAC4G,EAAA,EAAU,CAACC,QAAQ,QAAQjH,MAAM,gBAAgB0G,UAAU,MAAU,OAAJzE,QAAI,IAAJA,OAAI,EAAJA,EAAMH,KAAKgD,KAAI,SAACwC,GAAG,iBAASA,EAAG,UAErG,kBAACN,EAAA,EAAU,CAACV,UAAWnB,EAAQ7E,MAAOiH,cAAY,EAACN,QAAQ,KAAKP,UAAU,MAAMzE,EAAK3B,OACrF,kBAACkH,EAAA,EAAW,KACR,kBAACR,EAAA,EAAU,CAACC,QAAQ,QAAQjH,MAAM,gBAAgB0G,UAAU,KAAI,SAAOzE,EAAKD,WAGpF,kBAACyF,EAAA,EAAW,CAACnB,UAAWnB,EAAQ3E,aAC5B,kBAACkH,EAAA,EAAM,CAACC,KAAK,QAAQ3H,MAAM,UAAU4H,WAAe,OAAJnC,QAAI,IAAJA,OAAI,EAAJA,EAAMO,QAAQW,QAAS,kBAtC/EtB,EAAS3B,GAASzB,EAAKqC,WAEnBwB,EADAC,EACSF,EAAMd,QAAO,SAACiB,GAAM,OAAKA,GAAUP,EAAKO,UAEvC,GAAD,mBAAKH,GAAK,CAAEJ,EAAKO,YAmClB,kBAACC,EAAK,QAEL,OAAJR,QAAI,IAAJA,OAAI,EAAJA,EAAMO,UAAW/D,EAAK+D,QACnB,yBAAKM,UAAWnB,EAAQlF,UACpB,kBAACyH,EAAA,EAAM,CAACG,MAAO,CAAE7H,MAAO,SAAW2H,KAAK,SAAQ,kBAAC,IAAa,CAACvB,SAAS,UACpEO,QAAS,kBAAMzB,EAAajD,EAAKqC,WAExC,OAAJmB,QAAI,IAAJA,OAAI,EAAJA,EAAMO,UAAW/D,EAAK+D,QACnB,kBAAC0B,EAAA,EAAM,CAACC,KAAK,QAAQ3H,MAAM,UAAU2G,QAAS,SAACC,GAAC,OA3D3C,SAACA,GAClBA,EAAEkB,iBACFzC,EAAS5B,GAAWxB,EAAKqC,MAyDwCyD,CAAanB,KAAK,kBAAC,IAAU,CAACR,SAAS,UAAU,cC7E3GrH,gBAAW,SAACiJ,GAAK,MAAM,CAClCC,cAAe,CACXzI,QAAS,OACT0I,WAAY,UAEhBC,SAAU,CACN9H,OAAQ2H,EAAMI,QAAQ,IAE1BC,UAAW,CACP3H,UAAW,cCkBJ4H,GAtBD,SAAH,GAAqC,IAA/B9E,EAAS,EAATA,UAAW0B,EAAY,EAAZA,aAClBC,EAAUC,KACVrC,EAAQwF,cAAY,SAACpE,GAAK,OAAKA,EAAMpB,MAAMA,SAC3CiB,EAAYuE,cAAY,SAACpE,GAAK,OAAKA,EAAMpB,MAAMiB,aAErD,OAAKA,GAAcjB,EAAMmD,OAGrBlC,EAAY,kBAACwE,EAAA,EAAgB,MAErB,kBAACC,EAAA,EAAI,CAACnC,UAAWnB,EAAQuD,UAAWA,WAAS,EAAChJ,eAAe,gBAAgBwI,WAAW,UAAUE,QAAS,GACtGrF,EAAM+B,KAAI,SAAC7C,GAAI,OACZ,kBAACwG,EAAA,EAAI,CAACE,IAAK1G,EAAKqC,IAAKsE,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC1C,kBAAC,GAAI,CAAC9G,KAAMA,EAAMuB,UAAWA,EAAW0B,aAAcA,SARtC,kBAACuD,EAAA,EAAI,KAAE,a,SCVpC1J,gBAAW,SAACiJ,GAAK,MAAM,CAClCgB,KAAM,CACF,uBAAwB,CACpB3I,OAAQ2H,EAAMI,QAAQ,KAG9Ba,MAAO,CACH1I,QAASyH,EAAMI,QAAQ,IAE3Bc,KAAM,CACF1J,QAAS,OACT2J,SAAU,OACVzJ,eAAgB,UAEpB0J,UAAW,CACPC,MAAO,MACPhJ,OAAQ,UAEZiJ,aAAc,CACVC,aAAc,Q,8BCoDPC,GA/DF,SAAH,GAAqC,IAA/BhG,EAAS,EAATA,UAAW0B,EAAY,EAAZA,aAEvB,EAAgCU,mBAAS,CAAEtF,MAAO,GAAI0B,QAAS,GAAIF,KAAM,GAAIiF,aAAc,KAAK,mBAAzF5E,EAAQ,KAAEsH,EAAW,KACtBtE,EAAUC,KACVsE,EAAWpE,eACXqE,EAAcpB,cAAY,SAACpE,GAAK,OAAKX,EAAYW,EAAMpB,MAAMA,MAAMsB,MAAK,SAACpC,GAAI,OAAKA,EAAKqC,MAAQd,KAAa,QAC5GiC,EAAO8C,cAAY,SAACpE,GAAK,OAAKA,EAAMyF,KAAKnE,SAASC,KAAKC,MAAMxE,aAAaC,QAAQ,SAExFyI,qBAAU,WACa,MAAfF,GAAqBF,EAAYE,KACtC,CAACA,IAEJ,IAOMG,EAAc,SAAClD,GACjB1D,QAAQC,IAAIK,GACZ0B,EAAa,MACbhC,QAAQC,IAAIK,GAEZiG,EAAY,CAAEnJ,MAAO,GAAI0B,QAAS,GAAIF,KAAM,GAAIiF,aAAc,MAGlE,OAAY,MAARtB,EAEI,kBAACsE,EAAA,EAAK,CAACzD,UAAWnB,EAAQ8D,MAAO1C,QAAM,EAACC,UAAW,GAC/C,kBAACQ,EAAA,EAAU,CAACa,MAAO,CAAEzB,SAAU,OAAQ5G,QAAS,OAAQC,cAAe,SAAUyI,WAAY,WAAY,8BAErG,kBAAC,KAAI,CAAC8B,GAAG,QAAQnC,MAAO,CAAEoC,eAAgB,SAAW,iBAQjE,kBAACF,EAAA,EAAK,CAACzD,UAAWnB,EAAQ8D,MAAOzC,UAAW,GACxC,0BAAM0D,aAAa,MAAMC,YAAU,EAAC7D,UAAS,UAAKnB,EAAQ6D,KAAI,YAAI7D,EAAQ+D,MAAQkB,SA7BrE,SAACxD,GAClBA,EAAEkB,iBACa4B,EAAXlG,EAAoBD,GAAW,CAAEC,YAAWrB,aAClCmB,GAAWnB,IACzB2H,MA0BQ,kBAAC9C,EAAA,EAAU,CAACC,QAAQ,MAAMzD,EAAY,kBAAoB,mBAG1D,kBAAC6G,EAAA,EAAS,CAACxG,KAAK,QAAQoD,QAAQ,WAAWqD,MAAM,QAAQC,WAAS,EAACC,MAAOrI,EAAS7B,MAAOmK,SAAU,SAAC7D,GAAC,OAAK6C,EAAY,6BAAKtH,GAAQ,IAAE7B,MAAOsG,EAAE8D,OAAOF,YAEtJ,kBAACH,EAAA,EAAS,CAACxG,KAAK,UAAUoD,QAAQ,WAAWqD,MAAM,UAAUC,WAAS,EAACI,WAAS,EAACC,KAAM,EAAGJ,MAAOrI,EAASH,QAASyI,SAAU,SAAC7D,GAAC,OAAK6C,EAAY,6BAAKtH,GAAQ,IAAEH,QAAS4E,EAAE8D,OAAOF,YAEjL,kBAACH,EAAA,EAAS,CAACxG,KAAK,OAAOoD,QAAQ,WAAWqD,MAAM,wBAAwBC,WAAS,EAACC,MAAOrI,EAASL,KAAM2I,SAAU,SAAC7D,GAAC,OAAK6C,EAAY,6BAAKtH,GAAQ,IAAEL,KAAM8E,EAAE8D,OAAOF,MAAMK,MAAM,WAE/K,yBAAKvE,UAAWnB,EAAQiE,WACpB,kBAAC,KAAQ,CAAC0B,KAAK,OAAOC,UAAU,EAAOC,OAAQ,gBAAGC,EAAM,EAANA,OAAM,OAAOxB,EAAY,6BAAKtH,GAAQ,IAAE4E,aAAckE,SAG5G,kBAACvD,EAAA,EAAM,CAACpB,UAAWnB,EAAQmE,aAAcrC,QAAQ,YAAYjH,MAAM,UAAU2H,KAAK,QAAQmD,KAAK,SAASP,WAAS,GAAC,UAElH,kBAAC7C,EAAA,EAAM,CAACT,QAAQ,YAAYjH,MAAM,YAAY2H,KAAK,QAAQ4C,WAAS,EAAC5D,QAAS,kBAAMmD,MAAgB,Y,oBClErG/K,gBAAW,iBAAO,CAC7BmM,GAAI,CACAxL,eAAgB,oBCgCTyL,GA5BE,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KACRpI,EAAkBuF,cAAY,SAACpE,GAAK,OAAKA,EAAMpB,SAA/CC,cACFqC,EAAWC,eAEXH,EAAUC,KAShB,OAPAyE,qBAAU,WACFuB,IACA/F,EAASb,IAAa,IACtBa,EAAS3C,EAAW0I,OAEzB,CAAC/F,EAAU+F,IAGV,kBAACC,GAAA,EAAU,CACPlG,QAAS,CAAE+F,GAAI/F,EAAQ+F,IACvBI,MAAOtI,EACPoI,KAAMA,GAAQ,EACdnE,QAAQ,WACRjH,MAAM,UACNuL,WAAY,SAAC3C,GAAI,OAEb,kBAAC4C,GAAA,EAAc,iBAAK5C,EAAI,CAAElC,UAAW+E,KAAMzB,GAAE,sBAAiBpB,EAAKwC,a,SC5BpErM,gBAAW,SAACiJ,GAAK,MAAM,CAClC0D,aAAc,CACV/L,aAAc,EACd4J,aAAc,OACd/J,QAAS,OACTe,QAAS,QAEboL,WAAY,CACRhM,aAAc,EACdiM,UAAW,OACXrL,QAAS,QAEbsL,cAAc,gBACT7D,EAAM8D,YAAYC,KAAK,MAAQ,CAC5BtM,cAAe,uBC4EZuM,OAzEf,WACI,IAAM7G,EAAUC,KAGV6G,EAPC,IAAIC,gBAAgBC,cAActK,QASnC0D,EAAWC,cACXH,EAAWC,eAEX8F,EAAOa,EAAMxK,IAAI,SAAW,EAC5B2K,EAAcH,EAAMxK,IAAI,eAC9B,EAAkCmE,mBAAS,MAAK,mBAAzCpC,EAAS,KAAE0B,EAAY,KAC9B,EAA4BU,mBAAS,IAAG,mBAAjC/D,EAAM,KAAEwK,EAAS,KACxB,EAAwBzG,mBAAS,IAAG,mBAA7B9D,EAAI,KAAEwK,EAAO,KAGdC,EAAa,WACX1K,GAAUC,GAEVuD,EAASb,IAAa,IACtBa,EAAShC,GAAgB,CAAExB,SAAQC,KAAMA,EAAK0K,KAAK,QACnDjH,EAAS,6BAAD,OAA8B1D,GAAU,OAAM,iBAASC,EAAK0K,KAAK,QAExEjH,EAAS,MAgBlB,OACI,kBAACkH,EAAA,EAAI,CAACC,IAAE,GACJ,kBAACC,EAAA,EAAS,CAACC,SAAS,MAChB,kBAACnE,EAAA,EAAI,CAACnC,UAAWnB,EAAQ0G,cAAenD,WAAS,EAAChJ,eAAe,gBAAgBwI,WAAW,UAAUE,QAAS,GAC3G,kBAACK,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1B,kBAAC,GAAK,CAACvF,UAAWA,EAAW0B,aAAcA,KAE/C,kBAACuD,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1B,kBAAC8D,EAAA,EAAM,CAACvG,UAAWnB,EAAQuG,aAAc9L,SAAS,SAASI,MAAM,WAC7D,kBAACqK,EAAA,EAAS,CAACxG,KAAK,SAASoD,QAAQ,WAAWqD,MAAM,kBAAkBC,WAAS,EAACC,MAAO3I,EAAQ4I,SAAU,SAAC7D,GAAC,OAAKyF,EAAUzF,EAAE8D,OAAOF,QAAQsC,WAAY,SAAClG,GAAC,OAtBxJ,SAACA,GAEF,KAAdA,EAAEmG,SAAgBR,IAoB0JS,CAAepG,MAC3K,kBAAC,IAAS,CACNiB,MAAO,CAAExH,OAAQ,UACjBmK,MAAO1I,EACPmL,MAAO,SAACC,GAAI,OArBjB5F,EAqBoC4F,OApBvDZ,EAAQ,GAAD,mBAAKxK,GAAI,CAAEwF,KADA,IAACA,GAsBK6F,SAAU,SAACD,GAAI,OAlBjBE,EAkBuCF,OAjB7DZ,EAAQxK,EAAKiD,QAAO,SAACuC,GAAG,OAAKA,IAAQ8F,MADhB,IAACA,GAmBE9C,MAAM,cACNrD,QAAQ,aAEZ,kBAACS,EAAA,EAAM,CAACf,QAAS4F,EAAYjG,UAAWnB,EAAQkI,aAAcpG,QAAQ,YAAYjH,MAAM,WAAU,WAEtG,kBAAC,GAAI,CAACwD,UAAWA,EAAW0B,aAAcA,KAExCkH,IAAgBtK,EAAKoE,QACnB,kBAAC6D,EAAA,EAAK,CAACzD,UAAWnB,EAAQwG,WAAYnF,UAAU,KAC5C,kBAAC,GAAQ,CAAC4E,KAAMA,U,yCCvEjCkC,GATF,WAAH,OACN,yBAAKzF,MAAO,CAAEwB,MAAO,OAAQpK,OAAQ,QAAUsO,QAAQ,aACnD,0BACIC,KAAK,eACLC,EAAE,8SCJC1O,gBAAW,SAACiJ,GAAK,MAAM,CAClCiB,MAAO,CACH2C,UAAW5D,EAAMI,QAAQ,GACzB5I,QAAS,OACTC,cAAe,SACfyI,WAAY,SACZ3H,QAASyH,EAAMI,QAAQ,IAE3BY,KAAM,CACF,uBAAwB,CACpB3I,OAAQ2H,EAAMI,QAAQ,KAG9BsF,OAAQ,CACJrN,OAAQ2H,EAAMI,QAAQ,GACtBjJ,gBAAiB6I,EAAM2F,QAAQC,UAAUC,MAE7C3E,KAAM,CACFG,MAAO,OACPuC,UAAW5D,EAAMI,QAAQ,IAE7B0F,OAAQ,CACJzN,OAAQ2H,EAAMI,QAAQ,EAAG,EAAG,IAEhC2F,aAAc,CACVxE,aAAcvB,EAAMI,QAAQ,Q,8DCGrB4F,GAxBD,SAAH,OAAMnK,EAAI,EAAJA,KAAMoK,EAAY,EAAZA,aAAc3D,EAAK,EAALA,MAAO4D,EAAI,EAAJA,KAAMC,EAAS,EAATA,UAAWrD,EAAI,EAAJA,KAAMsD,EAAkB,EAAlBA,mBAAkB,OACjF,kBAAC3F,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAIoF,EAAO,EAAI,IAC9B,kBAAC7D,EAAA,EAAS,CACNxG,KAAMA,EACN4G,SAAUwD,EACVhH,QAAQ,WACRoH,UAAQ,EACR9D,WAAS,EACTD,MAAOA,EACP6D,UAAWA,EACXrD,KAAMA,EACNwD,WAAqB,aAATzK,EAAsB,CAC9B0K,aACI,kBAACC,GAAA,EAAc,CAAC5O,SAAS,OACrB,kBAAC6O,GAAA,EAAU,CAAC9H,QAASyH,GACP,aAATtD,EAAsB,kBAAC,KAAa,MAAM,kBAAC,KAAU,SAIlE,S,cCxBhB,mmGAAArI,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAGO,IAAMiM,GAAS/L,YAAiB,SAAQ,wCAAE,WAAOuG,GAAI,mGd2B5CyF,EczBsBzF,EdyBTvI,EAAIsB,KAAK,eAAgB0M,GczBV,KAAD,EAAvB,OAAuB,SAA3B9L,EAAI,EAAJA,KAAI,kBACLA,GAAI,gCAGXK,QAAQC,IAAI,EAAD,IAAQ,kCdqBZ,IAACwL,IcrBW,oBAE1B,mDAR8C,IAUlCC,GAAQjM,YAAiB,QAAO,wCAAE,WAAOuG,GAAI,mGdkB3CyF,EchBsBzF,EdgBTvI,EAAIsB,KAAK,cAAe0M,GchBT,KAAD,EAAtB,OAAsB,SAA1B9L,EAAI,EAAJA,KAAI,kBACLA,GAAI,gCAGXK,QAAQC,IAAI,EAAD,IAAQ,kCdYb,IAACwL,IcZY,oBAE1B,mDAR4C,IAevCE,GAAYjL,YAAY,CAC1BC,KAAM,OACNC,aANiB,CACjB2B,KAAM,MAMNxB,SAAU,CACN6K,YAAa,SAAC3K,EAAOC,GACjB,MAA0BA,EAAOG,QAAzBwK,EAAM,EAANA,OAAQC,EAAK,EAALA,MAChB7K,EAAMsB,KAAO,CACTwJ,SAAUF,EAAOE,SACjBpL,KAAMkL,EAAOG,UACblJ,OAAQ+I,EAAOI,UAEnBhO,aAAaiO,QAAQ,UAAWJ,GAChC7N,aAAaiO,QAAQ,OAAQ1J,KAAK2J,UAAU,gBAAKlL,EAAMsB,SAE3D6J,aAAc,SAACnL,EAAOC,GAClBD,EAAMsB,KAAO,KACbtE,aAAaoO,WAAW,WACxBpO,aAAaoO,WAAW,UAGhC9K,cAAe,SAACC,GACZA,EAAQC,QAAQ+J,GAAO9J,WAAW,SAACT,EAAOC,GACtC,IAAM2K,EAAS3K,EAAOG,QACtBJ,EAAMsB,KAAO,CACT5B,KAAMkL,EAAOlL,KACbmC,OAAQ+I,EAAO/I,QAEnB7E,aAAaiO,QAAQ,UAAWL,EAAOC,OACvC7N,aAAaiO,QAAQ,OAAQ1J,KAAK2J,UAAU,gBAAKlL,EAAMsB,WAG3Df,EAAQC,QAAQiK,GAAMhK,WAAW,SAACT,EAAOC,GACrC,IAAM2K,EAAS3K,EAAOG,QACtBJ,EAAMsB,KAAO,CACT5B,KAAMkL,EAAOlL,KACbmC,OAAQ+I,EAAO/I,QAEnB7E,aAAaiO,QAAQ,UAAWL,EAAOC,OACvC7N,aAAaiO,QAAQ,OAAQ1J,KAAK2J,UAAU,gBAAKlL,EAAMsB,cAK5D,GAAsCoJ,GAAU7J,QAAxC8J,GAAW,GAAXA,YAAaQ,GAAY,GAAZA,aACbT,MAAiB,Q,cCxEhC,mmGAAApM,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAaA,IAAMqB,GAAe,CAAE0L,UAAW,GAAIC,SAAU,GAAIC,MAAO,GAAIC,SAAU,GAAIC,gBAAiB,IA0F/EC,GAxFF,WACT,MAAwBjK,mBAAS9B,IAAa,mBAAvCoF,EAAI,KAAE4G,EAAO,KACpB,EAAgClK,oBAAS,GAAK,mBAAvCmK,EAAQ,KAAEC,EAAW,KACtB3K,EAAWC,eACXC,EAAWC,cACXL,EAAUC,KAEhB,EAAwCQ,oBAAS,GAAM,mBAAhDqK,EAAY,KAAEC,EAAe,KAoB9BC,EAAa,wCAAG,WAAOC,GAAG,0EACtBrB,EAAY,OAAHqB,QAAG,IAAHA,OAAG,EAAHA,EAAKC,WACdrB,EAAW,OAAHoB,QAAG,IAAHA,OAAG,EAAHA,EAAKE,QACnB,IACIjL,EAASyJ,GAAY,CAAEC,SAAQC,WAC/BzJ,EAAS,KACX,MAAOgL,GACLrN,QAAQC,IAAIoN,GACf,2CACJ,gBATkB,sCAabtC,EAAe,SAACrH,GAAC,OAAKkJ,EAAQ,6BAAK5G,GAAI,mBAAGtC,EAAE8D,OAAO7G,KAAO+C,EAAE8D,OAAOF,UAEzE,OACI,kBAACmC,EAAA,EAAS,CAACjG,UAAU,OAAOkG,SAAS,MACjC,kBAAC7C,EAAA,EAAK,CAACzD,UAAWnB,EAAQ8D,MAAOzC,UAAW,GACxC,kBAACgK,GAAA,EAAM,CAAClK,UAAWnB,EAAQuI,QACvB,kBAAC,KAAgB,OAErB,kBAAC1G,EAAA,EAAU,CAACN,UAAU,KAAKO,QAAQ,MAAM8I,EAAW,UAAY,WAChE,0BAAMzJ,UAAWnB,EAAQ+D,KAAMkB,SAjCtB,SAACxD,GAClBA,EAAEkB,iBAGEzC,EADA0K,EACSrB,GAAOxF,GAEP0F,GAAM1F,IAEnB3D,EAAS,OA0BG,kBAACkD,EAAA,EAAI,CAACC,WAAS,EAACN,QAAS,GACpB2H,GACG,oCACI,kBAAC,GAAK,CAAClM,KAAK,YAAYyG,MAAM,aAAa2D,aAAcA,EAAcE,WAAS,EAACD,MAAI,IACrF,kBAAC,GAAK,CAACrK,KAAK,WAAWyG,MAAM,YAAY2D,aAAcA,EAAcC,MAAI,KAGjF,kBAAC,GAAK,CAACrK,KAAK,QAAQyG,MAAM,gBAAgB2D,aAAcA,EAAcnD,KAAK,UAC3E,kBAAC,GAAK,CAACjH,KAAK,WAAWyG,MAAM,WAAW2D,aAAcA,EAAcnD,KAAMmF,EAAe,OAAS,WAAY7B,mBAlDvG,WAAH,OAAS8B,GAAiBD,MAmD7BF,GAAY,kBAAC,GAAK,CAAClM,KAAK,kBAAkByG,MAAM,kBAAkB2D,aAAcA,EAAcnD,KAAK,cAExG,kBAACpD,EAAA,EAAM,CAACoD,KAAK,SAASP,WAAS,EAACtD,QAAQ,YAAYjH,MAAM,UAAUsG,UAAWnB,EAAQ2I,QAClFiC,EAAW,UAAY,WAE5B,kBAAC,eAAW,CACRU,SAAS,2EACTC,OAAQ,SAACC,GAAW,OAChB,kBAACjJ,EAAA,EAAM,CAACpB,UAAWnB,EAAQ4I,aAAc/N,MAAM,UAAUuK,WAAS,EAAC5D,QAASgK,EAAYhK,QAASiB,SAAU+I,EAAY/I,SAAUgJ,UAAW,kBAACC,GAAI,MAAK5J,QAAQ,aAAY,mBAI9K6J,UAAWX,EACXY,UAlCA,WAAH,OAAS7N,QAAQC,IAAI,qDAmClB6N,aAAa,uBAEjB,kBAACvI,EAAA,EAAI,CAACC,WAAS,EAAChJ,eAAe,YAC3B,kBAAC+I,EAAA,EAAI,CAACG,MAAI,GACN,kBAAClB,EAAA,EAAM,CAACf,QAnEb,WACfmJ,EAAQhM,IACRkM,GAAY,SAACiB,GAAY,OAAMA,KAC/Bf,GAAgB,KAiESH,EAAW,mCAAqC,wC,wEC3FlEhR,gBAAW,SAACiJ,GAAK,MAAM,CAClCkJ,OAAO,cACHvR,aAAc,GACdU,OAAQ,SACRb,QAAS,OACTC,cAAe,MACfC,eAAgB,gBAChBwI,WAAY,SACZ3H,QAAS,aACRyH,EAAM8D,YAAYC,KAAK,MAAQ,CAC5BtM,cAAe,WAGvB0R,QAAS,CACLnR,MAAOgI,EAAM2F,QAAQyD,QAAQvD,KAC7B5D,eAAgB,OAChB7D,SAAU,MACViL,WAAY,KAEhBvK,MAAO,CACHwK,WAAY,OACZ1F,UAAW,MACX2F,YAAa,QAEjBC,QAAQ,cACJhS,QAAS,OACTE,eAAgB,WAChB2J,MAAO,SACNrB,EAAM8D,YAAYC,KAAK,MAAQ,CAC5B1C,MAAO,SAGfoI,QAAQ,cACJjS,QAAS,OACTE,eAAgB,gBAChB2J,MAAO,QACPnB,WAAY,UACXF,EAAM8D,YAAYC,KAAK,MAAQ,CAC5B1C,MAAO,OACPuC,UAAW,GACXlM,eAAgB,WAGxBgS,OAAQ,CACJJ,WAAY,QAEhBK,SAAU,CACNnS,QAAS,OACT0I,WAAY,SACZxH,UAAW,UAEfkR,eAAgB,CACZpS,QAAS,OACT0I,WAAY,UAEhB2J,OAAQ,CACJ7R,MAAOgI,EAAM2F,QAAQmE,gBAAgBC,KAAW,MAChD5S,gBAAiB4S,KAAW,UCLrBC,OA3Cf,WAAmB,IAAD,EACR7M,EAAUC,KACVC,EAAWC,eACXC,EAAWC,cAGXC,EAAO8C,cAAY,SAACpE,GAAK,OAAKA,EAAMyF,KAAKnE,SAASC,KAAKC,MAAMxE,aAAaC,QAAQ,SAWxF,OAVA8B,QAAQC,IAAIsC,GAEZoE,qBAAU,WACN,IAAMmF,EAAQ7N,aAAaC,QAAQ,WAC/B4N,IAEkB,IADFiD,aAAOjD,GACXkD,IAAaC,KAAKC,OAAO/M,EAASiK,SAEnD,CAACjK,IAGA,kBAACwH,EAAA,EAAM,CAACvG,UAAWnB,EAAQ+L,OAAQtR,SAAS,SAASI,MAAM,WACvD,kBAAC,KAAI,CAACgK,GAAG,IAAI1D,UAAWnB,EAAQyM,gBAC5B,yBAAKtL,UAAWnB,EAAQ2B,MAAOuL,IAAKC,KAAMC,IAAI,GAAGtT,OAAQ,GAAIoK,MAAO,KACpE,yBAAK3C,UAAW+E,KAAMzB,GAAG,IAAIqI,IAAKG,KAAMD,IAAI,GAAGtT,OAAQ,MAE3D,kBAACwT,GAAA,EAAO,CAACnM,UAAWnB,EAAQqM,SACvB/L,EACG,yBAAKa,UAAWnB,EAAQsM,SACpB,kBAACjB,GAAA,EAAM,CAAClK,UAAWnB,EAAQ0M,OAAQU,IAAS,OAAJ9M,QAAI,IAAJA,OAAI,EAAJA,EAAM5B,KAAMwO,IAAS,OAAJ5M,QAAI,IAAJA,OAAI,EAAJA,EAAMwJ,UAAe,OAAJxJ,QAAI,IAAJA,GAAU,QAAN,EAAJA,EAAM5B,YAAI,WAAN,EAAJ,EAAY6O,OAAO,IAC7F,kBAAC1L,EAAA,EAAU,CAACV,UAAWnB,EAAQwM,SAAU1K,QAAQ,MAAU,OAAJxB,QAAI,IAAJA,OAAI,EAAJA,EAAM5B,MAC7D,kBAAC6D,EAAA,EAAM,CAACT,QAAQ,YAAYX,UAAWnB,EAAQuM,OAAQ1R,MAAM,YACzD2G,QAAS,WACLtB,EAASiK,MACT/J,EAAS,OAEhB,WAGL,kBAACmC,EAAA,EAAM,CAAChB,UAAW+E,KAAMzB,GAAG,QAAQ/C,QAAQ,YAAYjH,MAAM,WAAU,c,UC9C7EjB,gBAAW,SAACiJ,GAAK,MAAM,CAClChJ,MAAO,CACHW,aAAc,OACdgT,UAAW,QACXtJ,MAAO,OACPuJ,UAAW,SAGfrT,KAAK,cACDC,QAAS,OACT6J,MAAO,QACNrB,EAAM8D,YAAYC,KAAK,MAAQ,CAC5B5C,SAAU,OACV1J,cAAe,WAGvBoT,QAAS,CACLlT,aAAc,OACdU,OAAQ,OACRyS,KAAM,GAEVC,aAAa,cACTzB,WAAY,QACXtJ,EAAM8D,YAAYC,KAAK,MAAQ,CAC5BuF,WAAY,IAGpB0B,iBAAiB,cACbxT,QAAS,QACRwI,EAAM8D,YAAYC,KAAK,MAAQ,CAC5BtM,cAAe,WAGvBwT,aAAc,CACVzT,QAAS,OACTE,eAAgB,SAChBwI,WAAY,SACZ3H,QAAS,OACTZ,aAAc,OACdV,OAAQ,QAEZiU,uBAAwB,CACpB1T,QAAS,OACTE,eAAgB,iBAEpByT,uBAAwB,CACpBlU,OAAQ,QACRmU,UAAW,OACX7B,YAAa,OACblI,MAAO,W,cClDf,mmGAAA5G,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAMA,IAkDe4Q,GAlDQ,SAAH,GAAkB,IAAZpR,EAAI,EAAJA,KAChBwD,EAAOC,KAAKC,MAAMxE,aAAaC,QAAQ,SAC7C,EAA8BwE,mBAAS,IAAG,mBAAnC0N,EAAO,KAAEC,EAAU,KACpBlO,EAAWC,eACjB,EAAgCM,mBAAa,OAAJ3D,QAAI,IAAJA,OAAI,EAAJA,EAAMuR,UAAS,mBAAjDA,EAAQ,KAAEC,EAAW,KACtBtO,EAAUC,KACVsO,EAAcC,mBAEdC,EAAa,wCAAG,2FAEuB,OADnCjS,EAAKM,EAAKqC,IACVtC,EAAO,UAAU,OAAJyD,QAAI,IAAJA,OAAI,EAAJA,EAAM5B,KAAI,aAAKyP,GAAO,SACDjO,EAASpC,EAAY,CAAEjB,UAASL,QAAO,KAAD,WAA3D6R,EAAQ,EAAnBjP,QAAWiP,SACnBD,EAAW,IACXE,EAAYD,GACZE,EAAYG,QAAQC,eAAe,CAAEC,SAAU,WAAY,2CAC9D,kBAPkB,mCASnB,OACI,6BACI,yBAAKzN,UAAWnB,EAAQ+N,wBACpB,yBAAK5M,UAAWnB,EAAQgO,wBACpB,kBAACnM,EAAA,EAAU,CAACO,cAAY,EAACN,QAAQ,MAAK,YAC7B,OAARuM,QAAQ,IAARA,OAAQ,EAARA,EAAU1O,KAAI,SAACkP,EAAGvR,GAAC,OAChB,kBAACuE,EAAA,EAAU,CAAC2B,IAAKlG,EAAG8E,cAAY,EAACN,QAAQ,aACrC,gCAAS+M,EAAEnJ,MAAM,MAAM,IACtBmJ,EAAEnJ,MAAM,KAAK,OAGtB,yBAAKoJ,IAAKP,KAEZjO,EAKE,yBAAKoC,MAAO,CAAEwB,MAAO,QAEjB,kBAACrC,EAAA,EAAU,CAACO,cAAY,EAACN,QAAQ,MAAK,mBACtC,kBAACoD,EAAA,EAAS,CAACE,WAAS,EAACK,KAAM,EAAG3D,QAAQ,WAAWqD,MAAM,UAAUK,WAAS,EAACH,MAAO8I,EAAS7I,SAAU,SAAC7D,GAAC,OAAK2M,EAAW3M,EAAE8D,OAAOF,UAChI,6BACA,kBAAC9C,EAAA,EAAM,CAACG,MAAO,CAAE+D,UAAW,QAAUrB,WAAS,EAAC3C,UAAW0L,EAAQpN,OAAQlG,MAAM,UAAUiH,QAAQ,YAAYN,QAASiN,GAAe,YAT3I,yBAAK/L,MAAO,CAAEwB,MAAO,QACjB,kBAACrC,EAAA,EAAU,CAACC,QAAQ,MAAM,mBAAgB,6BAAM,IAAC,kBAAC,KAAI,CAAC+C,GAAG,QAAQnC,MAAO,CAAEoC,eAAgB,OAAQjK,MAAO,UAAW,6BCuC9HiF,GApEF,WACT,MAAmCsD,cAAY,SAACpE,GAAK,OAAKA,EAAMpB,SAAxDd,EAAI,EAAJA,KAAMc,EAAK,EAALA,MAAOiB,EAAS,EAATA,UACfqB,EAAWC,eACXC,EAAWC,cACXL,EAAUC,KACRzD,EAAOuS,cAAPvS,GAUR,GARAkI,qBAAU,WACNxE,EAASjC,EAAUzB,MACpB,CAACA,EAAI0D,IAERwE,qBAAU,WACF5H,GAAMoD,EAAShC,GAAgB,CAAExB,OAAQ,OAAQC,KAAU,OAAJG,QAAI,IAAJA,OAAI,EAAJA,EAAMH,KAAK0K,KAAK,UAC5E,CAACvK,EAAMoD,KAELpD,EAAM,OAAO,KAGlB,GAAI+B,EACA,OACI,kBAAC+F,EAAA,EAAK,CAACvD,UAAW,EAAGF,UAAWnB,EAAQ8N,cACpC,kBAACzK,EAAA,EAAgB,CAACb,KAAK,SAKnC,IAAMqL,EAAmBjQ,EAAMgC,QAAO,YAAM,SAAHT,MAAkBrC,EAAKqC,OAEhE,OACI,kBAACyF,EAAA,EAAK,CAAClC,MAAO,CAAEtH,QAAS,OAAQZ,aAAc,QAAU6G,UAAW,GAChE,yBAAKF,UAAWnB,EAAQ5F,MACpB,yBAAK+G,UAAWnB,EAAQ0N,SACpB,kBAAC7L,EAAA,EAAU,CAACC,QAAQ,KAAKP,UAAU,MAAMzE,EAAK3B,OAC9C,kBAAC0G,EAAA,EAAU,CAACO,cAAY,EAACN,QAAQ,KAAKjH,MAAM,gBAAgB0G,UAAU,MAAMzE,EAAKH,KAAKgD,KAAI,SAACwC,GAAG,iBAASA,EAAG,SAC1G,kBAACN,EAAA,EAAU,CAACO,cAAY,EAACN,QAAQ,QAAQP,UAAU,KAAKzE,EAAKD,SAC7D,kBAACgF,EAAA,EAAU,CAACC,QAAQ,MAAK,eAAahF,EAAKiF,WAC3C,kBAACF,EAAA,EAAU,CAACC,QAAQ,SAASE,IAAOlF,EAAKmF,WAAWC,WACpD,kBAAC8M,GAAA,EAAO,CAACtM,MAAO,CAAExH,OAAQ,YAC1B,kBAAC2G,EAAA,EAAU,CAACC,QAAQ,SAAQ,gCAAQ,iCACpC,kBAACkN,GAAA,EAAO,CAACtM,MAAO,CAAExH,OAAQ,YAC1B,kBAAC,GAAc,CAAC4B,KAAMA,IACtB,kBAACkS,GAAA,EAAO,CAACtM,MAAO,CAAExH,OAAQ,aAE9B,yBAAKiG,UAAWnB,EAAQ4N,cACpB,yBAAKzM,UAAWnB,EAAQnG,MAAOqT,IAAKpQ,EAAK8E,cAAgB,qGAAsGwL,IAAKtQ,EAAK3B,UAGjL,yBAAKgG,UAAWnB,EAAQ0N,SACpB,kBAAC7L,EAAA,EAAU,CAACO,cAAY,EAACN,QAAQ,MAAK,wBACtC,kBAACkN,GAAA,EAAO,MACPnB,EAAiB9M,QACd,yBAAKI,UAAWnB,EAAQ6N,kBACnBA,EAAiBlO,KAAI,gBAAGxE,EAAK,EAALA,MAAO4G,EAAS,EAATA,UAAWlF,EAAO,EAAPA,QAAS6D,EAAK,EAALA,MAAOkB,EAAY,EAAZA,aAAczC,EAAG,EAAHA,IAAG,OACxE,yBAAKuD,MAAO,CAAExH,OAAQ,OAAQ+T,OAAQ,WAAazN,QAAS,kBArCnE,SAACrC,GAAG,OAAKiB,EAAS,UAAD,OAAWjB,IAqC6C+P,CAAS/P,IAAMqE,IAAKrE,GAClF,kBAAC0C,EAAA,EAAU,CAACO,cAAY,EAACN,QAAQ,MAAM3G,GACvC,kBAAC0G,EAAA,EAAU,CAACO,cAAY,EAACN,QAAQ,aAAaC,GAC9C,kBAACF,EAAA,EAAU,CAACO,cAAY,EAACN,QAAQ,aAAajF,GAC9C,kBAACgF,EAAA,EAAU,CAACO,cAAY,EAACN,QAAQ,aAAY,UAAQpB,EAAMK,QAC3D,yBAAKmM,IAAKtL,EAAcsC,MAAM,QAAQkJ,IAAI,aCtC3D+B,GAvBH,WAIR,IAAMtF,EAAQ7N,aAAaC,QAAQ,WAC7BqE,EAAOtE,aAAaC,QAAQ,QAClC,OACI,kBAAC,KAAM,KACH,kBAACuL,EAAA,EAAS,CAACC,SAAS,MAChB,kBAAC,GAAM,MACP,kBAAC,IAAM,KAEH,kBAAC,IAAK,CAAC2H,KAAK,IAAIC,OAAK,EAACC,QAAS,kBAAC,IAAQ,CAACzK,GAAG,aAC5C,kBAAC,IAAK,CAACuK,KAAK,SAASC,OAAK,EAACC,QAAS,kBAAC,GAAI,QACzC,kBAAC,IAAK,CAACF,KAAK,gBAAgBC,OAAK,EAACC,QAAS,kBAAC,GAAI,QAChD,kBAAC,IAAK,CAACF,KAAK,aAAaE,QAAS,kBAACC,GAAW,QAC9C,kBAAC,IAAK,CAACH,KAAK,QAAQE,QAAUzF,GAAUvJ,EAAkB,kBAAC,IAAQ,CAACuE,GAAG,WAAxB,kBAAC,GAAI,YClB3D2K,I,OAAQC,YAAe,CAChCC,QAAS,CACL9R,MAAO+R,GACPlL,KAAMmL,OCDdC,IAAStE,OACL,kBAAC,KAAQ,CAACiE,MAAOA,IACb,kBAAC,GAAG,OAERM,SAASC,eAAe,W","file":"static/js/main.777c4dc4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/memories-Logo.8e9763ff.png\";","module.exports = __webpack_public_path__ + \"static/media/memoriesText.2b89c5fa.png\";","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n    media: {\n        height: 0,\n        paddingTop: '56.25%',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        backgroundBlendMode: 'darken',\n    },\n    border: {\n        border: 'solid',\n    },\n    fullHeightCard: {\n        height: '100%',\n    },\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        borderRadius: '15px',\n        height: '100%',\n        position: 'relative',\n    },\n    overlay: {\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        color: 'white',\n    },\n    overlay2: {\n        position: 'absolute',\n        top: '20px',\n        right: '20px',\n        color: 'white',\n\n    },\n    grid: {\n        display: 'flex',\n    },\n    details: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        margin: '20px',\n    },\n    title: {\n        padding: '0 16px',\n    },\n    cardActions: {\n        padding: '0 16px 8px 16px',\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    cardAction: {\n        display: 'block',\n        textAlign: 'initial',\n    },\n});","import axios from 'axios';\n\nconst url = \"https://memories-mern-server.vercel.app/\";\nconst Api = axios.create({ baseURL: url })   //benefit of using this we can define our headers here now only no need of adding them in each request;\n// setting headers for every request if we have profile in our local storage \n\nApi.interceptors.request.use((req) => {\n    if (localStorage.getItem('profile')) {\n        req.headers.authorization = `Bearer ${localStorage.getItem('profile')}`\n    }\n    return req;\n})\n\n// const fetchAllPosts = () => axios.get(`${url}/posts`); by using axios.create(baseurl) now we can just directly use api.get() methods\n\n// const createNewPost = ({ postData, token }) => axios.post(`${url}/posts`, postData, {\n//     headers: {\n//         authorization: `Bearer ${token}`\n//     }\n// });\n\nconst fetchAllPosts = (pageNumber) => Api.get(`/posts?page=${pageNumber}`);\nconst GetPost = (id) => Api.get(`/posts/${id}`);\n//? used for query parameter in nodejs remember we can use url/:id for specific resources on server but for searching multiple resources matching query we use query url?name='usa' in server const {name} = req.query\nconst fetchPostsByFilter = ({ search, tags }) => Api.get(`posts/search?search=${search || 'none'}&tags=${tags}`);\nconst PostComment = ({ message, id }) => Api.post(`/posts/comments/${id}`, { message })\nconst createNewPost = (postData) => Api.post(\"/posts\", postData);\nconst UpdatePost = (postData, id) => Api.patch(`posts/${id}`, postData);\nconst DeletePost = (id) => Api.delete(`/posts/${id}`);\nconst LikePost = (id) => Api.patch(`posts/likes/${id}`, id);\n\nconst SignUp = (formData) => Api.post(`/auth/signup`, formData);\nconst LogIn = (formData) => Api.post(`/auth/login`, formData);\n\n\nexport { fetchAllPosts, createNewPost, UpdatePost, DeletePost, LikePost, SignUp, LogIn, fetchPostsByFilter, GetPost, PostComment };","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { fetchAllPosts, GetPost, createNewPost, UpdatePost, DeletePost, LikePost, fetchPostsByFilter, PostComment } from \"../api/api\";\n\n\n//getState is function to get current state of application in redux toolkit thunks \nexport const fetchPosts = createAsyncThunk('fetchPosts', async (pageNumber, { getState }) => {\n    // const state = getState();\n\n    // console.log(state);\n    const { data: { currPage, posts, numberOfPages } } = await fetchAllPosts(pageNumber);\n    return { posts, currPage, numberOfPages };\n})\n\nexport const postComment = createAsyncThunk(\"postComment\", async ({ message, id }) => {\n    try {\n        const { data } = await PostComment({ message, id });\n        return data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n\n})\n\nexport const fetchPost = createAsyncThunk('fetchPost', async (id) => {\n    const { data } = await GetPost(id);\n    return data;\n})\n\nexport const getPostBySearch = createAsyncThunk('getPostBySearch', async ({ search, tags }) => {\n    const { data } = await fetchPostsByFilter({ search, tags });\n    return data;\n})\n\nexport const createPost = createAsyncThunk('createPost', async (postData) => {\n    const { data } = await createNewPost(postData);\n    return data;\n})\nexport const updatePost = createAsyncThunk('updatePost', async ({ currentId, postData }) => {\n    const { data } = await UpdatePost(postData, currentId);\n    return { data, currentId };\n})\nexport const deletePost = createAsyncThunk('deletePost', async (id) => {\n    await DeletePost(id);\n    return id;\n})\nexport const likePost = createAsyncThunk(\"likePost\", async (id) => {\n    const { data } = await LikePost(id);\n    return { data, id };\n})\n\nconst initialState = {\n    posts: [],\n    post: null,\n    currPost: null,\n    currentId: null,\n    numberOfPages: 1,\n    currPage: 1,\n    isLoading: true,\n}\n\n\nconst postSlice = createSlice({\n    name: 'PostSlice',\n    initialState,\n    reducers: {\n        getPost: (state, action) => {\n            // Inside a reducer action, the state prints as a Proxy object(in Redux Toolkit), but there is function based on redux - toolkit docs current that you can use to print your state inside reducer actions like this e.g  console.log(current(state.posts));\n            const post = state.posts.find((post) => post._id === action.payload);\n            state.currPost = post;\n        },\n        setIsLoading: (state, action) => {\n            state.isLoading = action.payload;\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(fetchPosts.fulfilled, (state, action) => {\n            state.isLoading = false;\n            const { posts, currPage, numberOfPages } = action.payload;\n            state.posts = posts;\n            state.currPage = currPage;\n            state.numberOfPages = numberOfPages;\n        })\n        builder.addCase(createPost.fulfilled, (state, action) => {\n            state.posts.push(action.payload);\n        })\n        builder.addCase(updatePost.fulfilled, (state, action) => {\n            const { data, currentId } = action.payload\n            state.posts = state.posts.map((post) => post._id === currentId ? data : post);\n\n        })\n        builder.addCase(deletePost.fulfilled, (state, action) => {\n            state.posts = state.posts.filter((post) => post._id !== action.payload);\n        })\n        builder.addCase(likePost.fulfilled, (state, action) => {\n            const { data, id } = action.payload\n            state.posts = state.posts.map((post) => post._id === id ? data : post);\n        })\n        builder.addCase(getPostBySearch.fulfilled, (state, action) => {\n            state.posts = action.payload;\n            state.isLoading = false;\n        })\n        builder.addCase(fetchPost.fulfilled, (state, action) => {\n            state.post = action.payload;\n        })\n\n    }\n})\n\nexport const { getPost, setIsLoading } = postSlice.actions;\nexport default postSlice.reducer;","import React, { useState } from 'react';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, ButtonBase } from '@material-ui/core/';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport ThumbUpAltOutlined from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport moment from 'moment';\nimport useStyles from \"./styles\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { deletePost, likePost } from \"../../../redux/postSlice\";\nimport { useDispatch } from 'react-redux';\n\n\nconst Post = ({ post, currentId, setCurrentId }) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const user = JSON.parse(localStorage.getItem('user'));\n    const [likes, setLikes] = useState(post?.likes);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(deletePost(post._id));\n    }\n\n\n    const openPost = (e) => navigate(`/posts/${post._id}`)\n\n\n    const hasLikedPost = likes.find((id) => id === user?.userId);\n\n    const handleLikes = () => {\n        dispatch(likePost(post._id))\n        if (hasLikedPost) {\n            setLikes(likes.filter((userId) => userId != user.userId))\n        }\n        else setLikes([...likes, user.userId]);\n    }\n\n    const Likes = () => {\n        if (likes.length > 0) {\n            return likes.find((like) => like === (user?.userId))\n                ? (\n                    <><ThumbUpAltIcon fontSize=\"small\" />&nbsp;{likes.length > 2 ? `You and ${likes.length - 1} others` : `${likes.length} like${likes.length > 1 ? 's' : ''}`}</>\n                ) : (\n                    <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{likes.length} {likes.length === 1 ? 'Like' : 'Likes'}</>\n                );\n        }\n\n        return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;Like</>;\n    };\n\n\n    return (\n        <Card className={classes.card} raised elevation={6} >\n            <ButtonBase component=\"span\" className={classes.cardAction} onClick={(e) => openPost(e)} >\n                <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} />\n                <div className={classes.overlay}>\n                    <Typography variant=\"h6\">{post.createdBy}</Typography>\n                    <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n                </div>\n                <div className={classes.details}>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post?.tags.map((tag) => `#${tag} `)}</Typography>\n                </div>\n                <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">Hello {post.message}</Typography>\n                </CardContent>\n            </ButtonBase>\n            <CardActions className={classes.cardActions}>\n                <Button size=\"small\" color=\"primary\" disabled={!user?.userId} onClick={() => handleLikes()}>\n                    <Likes />\n                </Button>\n                {user?.userId === post.userId &&\n                    <div className={classes.overlay2}>\n                        <Button style={{ color: 'white' }} size=\"small\"><MoreHorizIcon fontSize=\"default\"\n                            onClick={() => setCurrentId(post._id)} /></Button>\n                    </div>}\n                {user?.userId === post.userId &&\n                    <Button size=\"small\" color=\"primary\" onClick={(e) => handleSubmit(e)} ><DeleteIcon fontSize=\"small\" /> Delete</Button>}\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default Post;","import { makeStyles } from '@material-ui/core/styles';\n\n\nexport default makeStyles((theme) => ({\n    mainContainer: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    smMargin: {\n        margin: theme.spacing(1),\n    },\n    actionDiv: {\n        textAlign: 'center',\n    },\n}));","import React from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\n\nimport Post from './post/post';\nimport useStyles from './styles';\n\nimport { useSelector } from \"react-redux\";\n\nconst Posts = ({ currentId, setCurrentId }) => {\n    const classes = useStyles();\n    const posts = useSelector((state) => state.posts.posts);\n    const isLoading = useSelector((state) => state.posts.isLoading);\n\n    if (!isLoading && !posts.length) return <Grid >No posts</Grid>\n\n    return (\n        isLoading ? <CircularProgress /> :\n            (\n                <Grid className={classes.container} container justifyContent='space-between' alignItems='stretch' spacing={3}>\n                    {posts.map((post) => (\n                        <Grid key={post._id} item xs={12} sm={12} md={6}>\n                            <Post post={post} currentId={currentId} setCurrentId={setCurrentId} />\n                        </Grid>\n                    ))}\n                </Grid>\n            )\n    );\n};\n\n\nexport default Posts;","\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n        },\n    },\n    paper: {\n        padding: theme.spacing(2),\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n    },\n    fileInput: {\n        width: '97%',\n        margin: '10px 0',\n    },\n    buttonSubmit: {\n        marginBottom: 10,\n    },\n}));","import React, { useEffect, useState } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport useStyles from \"./styles\";\nimport FileBase from 'react-file-base64';\nimport { Link } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPost, updatePost } from '../../redux/postSlice';\n\n\n\nconst Form = ({ currentId, setCurrentId }) => {\n\n    const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile: '' });\n    const classes = useStyles();\n    const disptach = useDispatch();\n    const currentPost = useSelector((state) => currentId ? state.posts.posts.find((post) => post._id === currentId) : null)\n    const user = useSelector((state) => state.auth.user) || JSON.parse(localStorage.getItem('user'));\n\n    useEffect(() => {\n        if (currentPost != null) setPostData(currentPost);\n    }, [currentPost]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (currentId) disptach(updatePost({ currentId, postData }));\n        else disptach(createPost(postData));\n        handleClear();\n    }\n\n    const handleClear = (e) => {\n        console.log(currentId);\n        setCurrentId(null);\n        console.log(currentId);\n\n        setPostData({ title: '', message: '', tags: '', selectedFile: '' });\n    }\n\n    if (user == null) {\n        return (\n            <Paper className={classes.paper} raised elevation={6}>\n                <Typography style={{ fontSize: '20px', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                    Want to create or like post\n                    <Link to='/auth' style={{ textDecoration: 'none' }} >SignUp Now </Link>\n                </Typography>\n            </Paper>\n        )\n    }\n\n    return (\n\n        <Paper className={classes.paper} elevation={6} >\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit} >\n                <Typography variant=\"h6\">{currentId ? 'Updating Memory' : \"Creating Memory\"}</Typography>\n\n\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n\n                <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n\n                <div className={classes.fileInput}>\n                    <FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} />\n                </div>\n\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" fullWidth onClick={() => handleClear()} >Clear</Button>\n            </form>\n        </Paper>\n    )\n}\n\nexport default Form;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n    ul: {\n        justifyContent: 'space-around',\n    },\n}));","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Pagination, PaginationItem } from '@material-ui/lab';\nimport { Link } from 'react-router-dom';\nimport { fetchPosts, setIsLoading } from '../redux/postSlice';\n\nimport useStyles from './style';\n\nconst Paginate = ({ page }) => {\n    const { numberOfPages } = useSelector((state) => state.posts);\n    const dispatch = useDispatch();\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        if (page) {\n            dispatch(setIsLoading(true));\n            dispatch(fetchPosts(page));\n        }\n    }, [dispatch, page]);\n\n    return (\n        <Pagination\n            classes={{ ul: classes.ul }}\n            count={numberOfPages}\n            page={page || 1}\n            variant=\"outlined\"\n            color=\"primary\"\n            renderItem={(item) => (\n                //item.page will automatically change page number as per the button it was clicked\n                <PaginationItem {...item} component={Link} to={`/posts?page=${item.page}`} />\n            )}\n        />\n    );\n};\n\nexport default Paginate;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    appBarSearch: {\n        borderRadius: 4,\n        marginBottom: '1rem',\n        display: 'flex',\n        padding: '16px',\n    },\n    pagination: {\n        borderRadius: 4,\n        marginTop: '1rem',\n        padding: '16px',\n    },\n    gridContainer: {\n        [theme.breakpoints.down('xs')]: {\n            flexDirection: 'column-reverse',\n        },\n    },\n}));","import React, { useState } from 'react'\nimport { Container, Grow, Grid, Paper, AppBar, TextField, Button } from '@material-ui/core';\nimport ChipInput from 'material-ui-chip-input';\nimport Posts from \"../../components/Posts/Posts\";\nimport Form from \"../../components/Form/Form\";\nimport Paginate from '../pagination';\nimport useStyles from \"./styles\";\nimport { useDispatch } from 'react-redux';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { getPostBySearch, setIsLoading } from '../../redux/postSlice';\n\n\n//Setting up ueqQuery for our routes which contianes page in their url as we do like in server req.query url/search?page=2 \n//we want to search that if url contains a page or not in its query object for that we have to use useLocation and create UseQuery function which will return info about current url\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction Home() {\n    const classes = useStyles();\n\n    //query contains page info\n    const query = useQuery();\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const page = query.get('page') || 1;\n    const searchQuery = query.get('searchQuery');\n    const [currentId, setCurrentId] = useState(null);\n    const [search, setSearch] = useState('');\n    const [tags, setTags] = useState([]);\n\n\n    const searchPost = () => {\n        if (search || tags) {\n            //One thing to note we cant send array in url parameters converting array into , seperated string on server we can again split it to convert into array\n            dispatch(setIsLoading(true));\n            dispatch(getPostBySearch({ search, tags: tags.join(',') }));\n            navigate(`/posts/search?searchQuery=${search || 'none'}&tags=${tags.join(',')}`);\n        }\n        else navigate(\"/\");\n    }\n\n    const handleKeyPress = (e) => {\n        //Keycode 13 means enter is pressed by user\n        if (e.keyCode === 13) searchPost();\n    }\n\n    const handleAddChip = (tag) => {\n        setTags([...tags, tag])\n    }\n\n    const handleDeleteChip = (tagToDelete) => {\n        setTags(tags.filter((tag) => tag !== tagToDelete))\n    }\n\n    return (\n        <Grow in>\n            <Container maxWidth='xl'>\n                <Grid className={classes.gridContainer} container justifyContent=\"space-between\" alignItems=\"stretch\" spacing={3} >\n                    <Grid item xs={12} sm={6} md={8}>\n                        <Posts currentId={currentId} setCurrentId={setCurrentId} />\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4}>\n                        <AppBar className={classes.appBarSearch} position='static' color='inherit'>\n                            <TextField name='search' variant='outlined' label='Search Memories' fullWidth value={search} onChange={(e) => setSearch(e.target.value)} onKeyPress={(e) => handleKeyPress(e)} />\n                            <ChipInput\n                                style={{ margin: '10px 0' }}\n                                value={tags}\n                                onAdd={(chip) => handleAddChip(chip)}\n                                onDelete={(chip) => handleDeleteChip(chip)}\n                                label=\"Search Tags\"\n                                variant=\"outlined\"\n                            />\n                            <Button onClick={searchPost} className={classes.searchButton} variant='contained' color='primary'>Search</Button>\n                        </AppBar>\n                        <Form currentId={currentId} setCurrentId={setCurrentId} />\n                        {/* //We want to show pagination only if no filters are applied */}\n                        {!searchQuery && !tags.length &&\n                            <Paper className={classes.pagination} elevation=\"6\">\n                                <Paginate page={page} />\n                            </Paper>\n                        }\n                    </Grid>\n                </Grid>\n            </Container>\n        </Grow>\n    )\n}\n\nexport default Home","import React from 'react';\n\nconst icon = () => (\n    <svg style={{ width: '20px', height: '20px' }} viewBox=\"0 0 24 24\">\n        <path\n            fill=\"currentColor\"\n            d=\"M21.35,11.1H12.18V13.83H18.69C18.36,17.64 15.19,19.27 12.19,19.27C8.36,19.27 5,16.25 5,12C5,7.9 8.2,4.73 12.2,4.73C15.29,4.73 17.1,6.7 17.1,6.7L19,4.72C19,4.72 16.56,2 12.1,2C6.42,2 2.03,6.8 2.03,12C2.03,17.05 6.16,22 12.25,22C17.6,22 21.5,18.33 21.5,12.91C21.5,11.76 21.35,11.1 21.35,11.1V11.1Z\"\n        />\n    </svg>\n);\n\nexport default icon;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: theme.spacing(2),\n    },\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n        },\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    googleButton: {\n        marginBottom: theme.spacing(2),\n    },\n}));","import React from 'react';\nimport { TextField, Grid, InputAdornment, IconButton } from '@material-ui/core';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst Input = ({ name, handleChange, label, half, autoFocus, type, handleShowPassword }) => (\n    <Grid item xs={12} sm={half ? 6 : 12}>\n        <TextField\n            name={name}\n            onChange={handleChange}\n            variant=\"outlined\"\n            required\n            fullWidth\n            label={label}\n            autoFocus={autoFocus}\n            type={type}\n            InputProps={name === 'password' ? {\n                endAdornment: (\n                    <InputAdornment position=\"end\">\n                        <IconButton onClick={handleShowPassword}>\n                            {type === 'password' ? <VisibilityOff /> : <Visibility />}\n                        </IconButton>\n                    </InputAdornment>\n                ),\n            } : null}\n        />\n    </Grid>\n);\n\nexport default Input;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { SignUp, LogIn } from \"../api/api\";\n\n\nexport const signUp = createAsyncThunk('signUp', async (form) => {\n    try {\n        const { data } = await SignUp(form);\n        return data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n})\n\nexport const logIn = createAsyncThunk('logIn', async (form) => {\n    try {\n        const { data } = await LogIn(form);\n        return data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n})\n\n\nconst initialState = {\n    user: null\n}\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        googleLogin: (state, action) => {\n            const { result, token } = action.payload\n            state.user = {\n                imageUrl: result.imageUrl,\n                name: result.givenName,\n                userId: result.googleId\n            }\n            localStorage.setItem('profile', token)\n            localStorage.setItem('user', JSON.stringify({ ...state.user }))\n        },\n        googleLogOut: (state, action) => {\n            state.user = null;\n            localStorage.removeItem('profile');\n            localStorage.removeItem('user');\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(signUp.fulfilled, (state, action) => {\n            const result = action.payload;\n            state.user = {\n                name: result.name,\n                userId: result.userId\n            }\n            localStorage.setItem('profile', result.token);\n            localStorage.setItem('user', JSON.stringify({ ...state.user }));\n\n        })\n        builder.addCase(logIn.fulfilled, (state, action) => {\n            const result = action.payload;\n            state.user = {\n                name: result.name,\n                userId: result.userId\n            }\n            localStorage.setItem('profile', result.token);\n            localStorage.setItem('user', JSON.stringify({ ...state.user }));\n        })\n    }\n})\n\nexport const { googleLogin, googleLogOut } = authSlice.actions;\nexport default authSlice.reducer;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nimport Icon from './Icon';\nimport useStyles from './styles';\nimport Input from './Input';\n\nimport { googleLogin } from '../../redux/authSlice';\nimport { signUp, logIn } from '../../redux/authSlice';\n\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\n\nconst Auth = () => {\n    const [form, setForm] = useState(initialState);\n    const [isSignup, setIsSignup] = useState(true);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const classes = useStyles();\n\n    const [showPassword, setShowPassword] = useState(false);\n    const handleShowPassword = () => setShowPassword(!showPassword);\n\n    const switchMode = () => {\n        setForm(initialState);\n        setIsSignup((prevIsSignup) => !prevIsSignup);\n        setShowPassword(false);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (isSignup) {\n            dispatch(signUp(form));\n        } else {\n            dispatch(logIn(form));\n        }\n        navigate(\"/\");\n    };\n\n    const googleSuccess = async (res) => {\n        const result = res?.profileObj;\n        const token = res?.tokenId;\n        try {\n            dispatch(googleLogin({ result, token }));\n            navigate(\"/\");\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const googleError = () => console.log('Google Sign In was unsuccessful. Try again later');\n\n    const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Paper className={classes.paper} elevation={6}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">{isSignup ? 'Sign up' : 'Sign in'}</Typography>\n                <form className={classes.form} onSubmit={handleSubmit} >\n                    <Grid container spacing={2}>\n                        {isSignup && (\n                            <>\n                                <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n                                <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\n                            </>\n                        )}\n                        <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n                        <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n                        {isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" />}\n                    </Grid>\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n                        {isSignup ? 'Sign Up' : 'Sign In'}\n                    </Button>\n                    <GoogleLogin\n                        clientId=\"564033717568-bu2nr1l9h31bhk9bff4pqbenvvoju3oq.apps.googleusercontent.com\"\n                        render={(renderProps) => (\n                            <Button className={classes.googleButton} color=\"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant=\"contained\">\n                                Google Sign In\n                            </Button>\n                        )}\n                        onSuccess={googleSuccess}\n                        onFailure={googleError}\n                        cookiePolicy=\"single_host_origin\"\n                    />\n                    <Grid container justifyContent=\"flex-end\">\n                        <Grid item>\n                            <Button onClick={switchMode}>\n                                {isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\"}\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Paper>\n        </Container>\n    );\n};\n\nexport default Auth;","import { makeStyles } from '@material-ui/core/styles';\nimport { deepPurple } from '@material-ui/core/colors';\n\nexport default makeStyles((theme) => ({\n    appBar: {\n        borderRadius: 15,\n        margin: '30px 0',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: '10px 50px',\n        [theme.breakpoints.down('sm')]: {\n            flexDirection: 'column',\n        },\n    },\n    heading: {\n        color: theme.palette.primary.main,\n        textDecoration: 'none',\n        fontSize: '2em',\n        fontWeight: 300,\n    },\n    image: {\n        marginLeft: '10px',\n        marginTop: '5px',\n        marginRight: '10px'\n    },\n    toolbar: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        width: '400px',\n        [theme.breakpoints.down('sm')]: {\n            width: 'auto',\n        },\n    },\n    profile: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        width: '400px',\n        alignItems: 'center',\n        [theme.breakpoints.down('sm')]: {\n            width: 'auto',\n            marginTop: 20,\n            justifyContent: 'center',\n        },\n    },\n    logout: {\n        marginLeft: '20px',\n    },\n    userName: {\n        display: 'flex',\n        alignItems: 'center',\n        textAlign: 'center',\n    },\n    brandContainer: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    purple: {\n        color: theme.palette.getContrastText(deepPurple[500]),\n        backgroundColor: deepPurple[500],\n    },\n}));","import React, { useEffect } from 'react';\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\nimport { Link, useNavigate } from 'react-router-dom';\nimport decode from 'jwt-decode';\nimport logo from \"../../images/memories-Logo.png\";\nimport text from \"../../images/memoriesText.png\"\nimport useStyles from \"./styles\";\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { googleLogOut } from '../../redux/authSlice';\n\n\nfunction Navbar() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    // let user = JSON.parse(localStorage.getItem('user'));\n    const user = useSelector((state) => state.auth.user) || JSON.parse(localStorage.getItem('user'));\n    console.log(user);\n\n    useEffect(() => {\n        const token = localStorage.getItem('profile');\n        if (token) {\n            const decoded = decode(token);\n            if (decoded.exp * 1000 < Date.now()) dispatch(googleLogOut())\n        }\n    }, [dispatch]);\n\n    return (\n        <AppBar className={classes.appBar} position=\"static\" color='inherit'>\n            <Link to=\"/\" className={classes.brandContainer}>\n                <img className={classes.image} src={logo} alt=\"\" height={45} width={45} />\n                <img component={Link} to=\"/\" src={text} alt=\"\" height={40} />\n            </Link>\n            <Toolbar className={classes.toolbar}>\n                {user ? (\n                    <div className={classes.profile}>\n                        <Avatar className={classes.purple} alt={user?.name} src={user?.imageUrl}>{user?.name?.charAt(0)}</Avatar>\n                        <Typography className={classes.userName} variant=\"h6\">{user?.name}</Typography>\n                        <Button variant=\"contained\" className={classes.logout} color=\"secondary\"\n                            onClick={() => {\n                                dispatch(googleLogOut())\n                                navigate(\"/\");\n                            }}\n                        >Logout</Button>\n                    </div>\n                ) : (\n                    <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\n                )}\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Navbar","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    media: {\n        borderRadius: '20px',\n        objectFit: 'cover',\n        width: '100%',\n        maxHeight: '600px',\n\n    },\n    card: {\n        display: 'flex',\n        width: '100%',\n        [theme.breakpoints.down('sm')]: {\n            flexWrap: 'wrap',\n            flexDirection: 'column',\n        },\n    },\n    section: {\n        borderRadius: '20px',\n        margin: '10px',\n        flex: 1,\n    },\n    imageSection: {\n        marginLeft: '20px',\n        [theme.breakpoints.down('sm')]: {\n            marginLeft: 0,\n        },\n    },\n    recommendedPosts: {\n        display: 'flex',\n        [theme.breakpoints.down('sm')]: {\n            flexDirection: 'column',\n        },\n    },\n    loadingPaper: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: '20px',\n        borderRadius: '15px',\n        height: '39vh',\n    },\n    commentsOuterContainer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    commentsInnerContainer: {\n        height: '200px',\n        overflowY: 'auto',\n        marginRight: '30px',\n        width: '70%'\n    },\n}));","import React, { useState, useRef } from 'react';\nimport { Typography, TextField, Button } from '@material-ui/core/';\nimport { useDispatch } from 'react-redux';\nimport { postComment } from '../../redux/postSlice';\nimport useStyles from './styles';\nimport { Link } from 'react-router-dom';\n\nconst CommentSection = ({ post }) => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    const [comment, setComment] = useState('');\n    const dispatch = useDispatch();\n    const [comments, setComments] = useState(post?.comments);\n    const classes = useStyles();\n    const commentsRef = useRef();\n\n    const handleComment = async () => {\n        const id = post._id;\n        const message = `${user?.name}: ${comment}`;\n        const { payload: { comments } } = await dispatch(postComment({ message, id }));\n        setComment('');\n        setComments(comments);\n        commentsRef.current.scrollIntoView({ behavior: 'smooth' });\n    };\n\n    return (\n        <div>\n            <div className={classes.commentsOuterContainer}>\n                <div className={classes.commentsInnerContainer}>\n                    <Typography gutterBottom variant=\"h6\">Comments</Typography>\n                    {comments?.map((c, i) => (\n                        <Typography key={i} gutterBottom variant=\"subtitle1\">\n                            <strong>{c.split(': ')[0]}</strong>\n                            {c.split(':')[1]}\n                        </Typography>\n                    ))}\n                    <div ref={commentsRef} />\n                </div>\n                {!user ?\n                    <div style={{ width: '50%' }}>\n                        <Typography variant='h5' >Want to Comment <br /> <Link to='/auth' style={{ textDecoration: 'none', color: 'black' }}>SignUp or Login now </Link></Typography>\n                    </div>\n                    :\n                    <div style={{ width: '70%' }}>\n\n                        <Typography gutterBottom variant=\"h6\">Write a comment</Typography>\n                        <TextField fullWidth rows={4} variant=\"outlined\" label=\"Comment\" multiline value={comment} onChange={(e) => setComment(e.target.value)} />\n                        <br />\n                        <Button style={{ marginTop: '10px' }} fullWidth disabled={!comment.length} color=\"primary\" variant=\"contained\" onClick={handleComment}>\n                            Comment\n                        </Button>\n                    </div>\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default CommentSection;","import React, { useEffect } from 'react';\nimport { Paper, Typography, CircularProgress, Divider } from '@material-ui/core/';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nimport { fetchPost, getPostBySearch } from '../../redux/postSlice';\nimport CommentSection from './CommentSection';\nimport useStyles from './styles';\n\nconst Post = () => {\n    const { post, posts, isLoading } = useSelector((state) => state.posts);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const classes = useStyles();\n    const { id } = useParams();\n\n    useEffect(() => {\n        dispatch(fetchPost(id));\n    }, [id, dispatch]);\n\n    useEffect(() => {\n        if (post) dispatch(getPostBySearch({ search: 'none', tags: post?.tags.join(',') }));\n    }, [post, dispatch]);\n\n    if (!post) return null;\n    const openPost = (_id) => navigate(`/posts/${_id}`);\n\n    if (isLoading) {\n        return (\n            <Paper elevation={6} className={classes.loadingPaper}>\n                <CircularProgress size=\"7em\" />\n            </Paper>\n        );\n    }\n\n    const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\n\n    return (\n        <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\n            <div className={classes.card}>\n                <div className={classes.section}>\n                    <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\n                    <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n                    <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\n                    <Typography variant=\"h6\">Created by: {post.createdBy}</Typography>\n                    <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\n                    <Divider style={{ margin: '20px 0' }} />\n                    <Typography variant=\"body1\"><strong>Realtime Chat - coming soon!</strong></Typography>\n                    <Divider style={{ margin: '20px 0' }} />\n                    <CommentSection post={post} />\n                    <Divider style={{ margin: '20px 0' }} />\n                </div>\n                <div className={classes.imageSection}>\n                    <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\n                </div>\n            </div>\n            <div className={classes.section}>\n                <Typography gutterBottom variant=\"h5\">You might also like:</Typography>\n                <Divider />\n                {recommendedPosts.length && (\n                    <div className={classes.recommendedPosts}>\n                        {recommendedPosts.map(({ title, createdBy, message, likes, selectedFile, _id }) => (\n                            <div style={{ margin: '20px', cursor: 'pointer' }} onClick={() => openPost(_id)} key={_id}>\n                                <Typography gutterBottom variant=\"h6\">{title}</Typography>\n                                <Typography gutterBottom variant=\"subtitle2\">{createdBy}</Typography>\n                                <Typography gutterBottom variant=\"subtitle2\">{message}</Typography>\n                                <Typography gutterBottom variant=\"subtitle1\">Likes: {likes.length}</Typography>\n                                <img src={selectedFile} width=\"250px\" alt=\"\" />\n                            </div>\n                        ))}\n                    </div>\n                )}\n            </div>\n        </Paper>\n    );\n};\n\nexport default Post;","import React from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport Home from \"./components/Home/Home\";\nimport Auth from \"./components/Auth/Auth\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport PostDetails from \"./components/PostDetails/PostDetails\";\nconst App = () => {\n\n\n    //Checking if token exists then user cant access the auth route\n    const token = localStorage.getItem('profile');\n    const user = localStorage.getItem('user');\n    return (\n        <Router>\n            <Container maxWidth=\"xl\">\n                <Navbar />\n                <Routes>\n                    {/* We use render and callback function inside it to navigate to another component in react routerv6 earlier we can do this by Redirect component now we have to use Navigate component */}\n                    <Route path=\"/\" exact element={<Navigate to='/posts' />} />\n                    <Route path='/posts' exact element={<Home />} />\n                    <Route path='/posts/search' exact element={<Home />} />\n                    <Route path='/posts/:id' element={<PostDetails />} />\n                    <Route path=\"/auth\" element={!token && !user ? <Auth /> : <Navigate to='/posts' />} />\n                </Routes>\n            </Container>\n        </Router>\n    )\n}\n\nexport default App;","import { configureStore } from \"@reduxjs/toolkit\";\nimport authReducer from \"./authSlice\";\nimport postReducer from \"./postSlice\";\n\n\nexport const store = configureStore({\n    reducer: {\n        posts: postReducer,\n        auth: authReducer,\n    }\n})","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport \"./index.css\";\nimport { store } from './redux/store';\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\"));"],"sourceRoot":""}